{"version":3,"sources":["images/default.png","components/Header.jsx","components/Gallery.jsx","pages/Home.jsx","helper.jsx","pages/Profile.jsx","pages/Login.jsx","components/UserCard.jsx","pages/Users.jsx","routes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","currentUserData","currentUser","reactLocalStorage","get","allUserData","getObject","this","setState","props","setCurrentUserData","setAllUserData","window","location","href","set","className","to","onClick","logout","React","PureComponent","Gallery","items","length","map","photo","key","id","style","backgroundImage","url","DefaultImage","Home","uploadPhoto","bind","event","Object","assign","_this","blobData","callback","reader","FileReader","readAsDataURL","onloadend","base64data","result","FileRead","target","files","base64Data","photos","push","setObject","type","onChange","Profile","selectedUserData","selectedUserId","match","params","find","user","parseInt","userName","UserData","password","Login","newUserName","newPassword","newConfirmPassword","isRegistered","login","validateFields","register","onEnterKey","showError","entries","fieldArr","i","loggedInUser","toLowerCase","trim","errorMessage","setTimeout","value","onKeyPress","e","prevState","UserCard","userData","profileImage","Users","Routes","path","component","exact","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dde437bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.3cb22185.png\";","import React  from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {reactLocalStorage} from 'reactjs-localstorage';\r\n\r\nclass Header extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentUserData: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        const currentUser = reactLocalStorage.get('userId');\r\n        const allUserData = reactLocalStorage.getObject('allUserData');\r\n        if (!!currentUser) {\r\n            this.setState({\r\n                currentUserData: allUserData[currentUser]\r\n            });\r\n            if(this.props.setCurrentUserData) {\r\n                this.props.setCurrentUserData(allUserData[currentUser]);\r\n            }\r\n            if(this.props.setAllUserData) {\r\n                this.props.setAllUserData(allUserData);\r\n            }\r\n        } else {\r\n            // redirect to login\r\n            window.location.href = '/';\r\n        }\r\n    }\r\n    logout() {\r\n        // reset user id in local storage\r\n        reactLocalStorage.set('userId', '');\r\n    }\r\n    render() {\r\n        const {currentUserData} = this.state;\r\n        return (\r\n            <div className='header-container'>\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/users/\">Users</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/\" onClick={this.logout}>Logout</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport DefaultImage from './../images/default.png';\r\n\r\nconst Gallery = ({items}) => (\r\n    <div>\r\n        {\r\n            !!items && !!items.length ?\r\n                items.map(photo => <div key={'image' + photo.id} className='image-gallery'\r\n                                        style={{backgroundImage: \"url(\" + photo.url + \")\"}}/>) :\r\n                <div key='default-image' className='image-gallery'\r\n                     style={{backgroundImage: \"url(\" + DefaultImage + \")\"}}/>\r\n\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport {reactLocalStorage} from \"reactjs-localstorage\";\r\nimport {FileRead} from \"../helper\";\r\nimport Header from \"../components/Header\";\r\nimport Gallery from \"../components/Gallery\";\r\n\r\nclass Home extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentUserData: {}\r\n        }\r\n        this.uploadPhoto = this.uploadPhoto.bind(this);\r\n        this.setCurrentUserData = this.setCurrentUserData.bind(this);\r\n    }\r\n    setCurrentUserData(currentUserData) {\r\n        this.setState({currentUserData});\r\n    }\r\n    uploadPhoto(event) {\r\n        let {currentUserData} = this.state;\r\n        currentUserData = Object.assign({}, currentUserData);\r\n\r\n        // read file and save to local storage\r\n        const _this = this;\r\n        FileRead(event.target.files[0], function (base64Data) {\r\n            currentUserData.photos.push({\r\n                id: !!currentUserData.photos.length ? currentUserData.photos.length : 0,\r\n                url: base64Data\r\n            })\r\n\r\n            // set in local state\r\n            _this.setState({\r\n                currentUserData\r\n            })\r\n\r\n            // set in local storage\r\n            const allUserData = reactLocalStorage.getObject('allUserData');\r\n            allUserData[currentUserData.id] = currentUserData;\r\n            reactLocalStorage.setObject('allUserData', allUserData);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentUserData} = this.state;\r\n        return (\r\n            <div className='home-container'>\r\n                <Header setCurrentUserData={this.setCurrentUserData}/>\r\n                <br />\r\n                <h2>My profile</h2>\r\n                <div className='btn upload-button-container'>\r\n                    <span>Upload</span>\r\n                    <input type=\"file\" onChange={this.uploadPhoto}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <Gallery items={currentUserData.photos} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","/* This file contains helper methods */\r\n\r\nexport const FileRead = function (blobData, callback = null) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blobData);\r\n    reader.onloadend = function() {\r\n        const base64data = reader.result;\r\n        if(callback)\r\n            callback(base64data);\r\n    }\r\n}","import React from 'react';\r\nimport Header from \"../components/Header\";\r\nimport Gallery from \"../components/Gallery\";\r\n\r\nclass Profile extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedUserData: {}\r\n        }\r\n        this.setAllUserData = this.setAllUserData.bind(this);\r\n    }\r\n\r\n    setAllUserData(allUserData) {\r\n        const selectedUserId = this.props.match.params.id;\r\n        const selectedUserData = allUserData.find(user => user.id === parseInt(selectedUserId, 0));\r\n        this.setState({selectedUserData});\r\n    }\r\n\r\n    render() {\r\n        const {selectedUserData} = this.state;\r\n        return (\r\n            <div>\r\n                <Header setAllUserData={this.setAllUserData}/>\r\n                {\r\n                    !!selectedUserData &&\r\n                    <div className='selected-user-details'>\r\n                        <h2>{selectedUserData.userName}</h2>\r\n                        <Gallery items={selectedUserData.photos} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {reactLocalStorage} from 'reactjs-localstorage';\r\n\r\nconst UserData = [\r\n    {\r\n        id: 0,\r\n        userName: \"Jack\",\r\n        password: \"developer7\",\r\n        photos: []\r\n    }, {\r\n        id: 1,\r\n        userName: \"Jameson\",\r\n        password: \"developer10\",\r\n        photos: []\r\n    }, {\r\n        id: 2,\r\n        userName: \"Jim\",\r\n        password: \"developer107\",\r\n        photos: []\r\n    }\r\n]\r\n\r\nclass Login extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            newUserName: '',\r\n            newPassword: '',\r\n            newConfirmPassword: '',\r\n            isRegistered: true,\r\n        }\r\n        this.login = this.login.bind(this);\r\n        this.validateFields = this.validateFields.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.onEnterKey = this.onEnterKey.bind(this);\r\n        this.showError = this.showError.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!Object.entries(reactLocalStorage.getObject('allUserData')).length) {\r\n            reactLocalStorage.setObject('allUserData', UserData);\r\n        }\r\n        if (!!reactLocalStorage.get('userId')) {\r\n            window.location.href = '/home';\r\n        }\r\n    }\r\n\r\n    validateFields(fieldArr) {\r\n        let result = true;\r\n        for (let i = 0; i < fieldArr.length; i++) {\r\n            if (!fieldArr[i]) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    login() {\r\n        const {userName, password} = this.state;\r\n        const isValid = this.validateFields([userName, password]);\r\n        if (isValid) {\r\n            const allUserData = reactLocalStorage.getObject('allUserData');\r\n            const loggedInUser = allUserData.find(user => user.userName.toLowerCase() === userName.trim().toLowerCase());\r\n            const isAuthorizedUser = !!loggedInUser && !!Object.entries(loggedInUser).length;\r\n            const isAuthenticatedUser = isAuthorizedUser && loggedInUser.password === password;\r\n            if (isAuthenticatedUser) {\r\n                reactLocalStorage.setObject('userId', loggedInUser.id);\r\n                window.location.href = '/home';\r\n            } else {\r\n                // invalid user\r\n                this.showError(\"Username or password incorrect!!\");\r\n\r\n                // reset user data\r\n                this.setState({\r\n                    userName: '',\r\n                    password: ''\r\n                });\r\n            }\r\n        } else {\r\n            this.showError();\r\n        }\r\n\r\n    }\r\n\r\n    register() {\r\n        const {newUserName, newPassword, newConfirmPassword} = this.state;\r\n        const isValid = this.validateFields([newUserName, newPassword, newConfirmPassword]);\r\n        if (isValid) {\r\n            const allUserData = reactLocalStorage.getObject('allUserData');\r\n            allUserData.push({\r\n                id: allUserData.length,\r\n                userName: newUserName.trim(),\r\n                password: newPassword,\r\n                photos: []\r\n            });\r\n            reactLocalStorage.setObject('allUserData', allUserData);\r\n            this.setState({\r\n                newUserName: '',\r\n                newPassword: '',\r\n                newConfirmPassword: '',\r\n                isRegistered: true,\r\n            });\r\n        } else if (newPassword !== newConfirmPassword) {\r\n            this.showError(\"Passwords do not match!\");\r\n        } else {\r\n            this.showError();\r\n        }\r\n\r\n    }\r\n\r\n    onEnterKey(event) {\r\n        if (event.key === 'Enter') {\r\n            const {isRegistered} = this.state;\r\n            if (!!isRegistered) {\r\n                this.login();\r\n            } else {\r\n                this.register();\r\n            }\r\n        }\r\n    }\r\n\r\n    showError(errorMessage = \"All fields are required!!\") {\r\n        this.setState({\r\n            errorMessage\r\n        }, function () {\r\n            const _this = this;\r\n            setTimeout(function () {\r\n                _this.setState({\r\n                    errorMessage: ''\r\n                });\r\n            }, 5000);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {userName, password, newUserName, newPassword, newConfirmPassword, isRegistered, errorMessage} = this.state;\r\n        return (\r\n            <div>\r\n                <div className='login-container'>\r\n                    {\r\n                        !!isRegistered ?\r\n                            ([\r\n                                <div className='login-input-label' key='username'>User Name: <input value={userName}\r\n                                                                                                    onKeyPress={this.onEnterKey}\r\n                                                                                                    onChange={(e) => this.setState({userName: e.target.value})}/>\r\n                                </div>,\r\n                                <div className='login-input-label' key='password'>Password: <input type='password'\r\n                                                                                                   onKeyPress={this.onEnterKey}\r\n                                                                                                   value={password}\r\n                                                                                                   onChange={(e) => this.setState({password: e.target.value})}/>\r\n                                </div>,\r\n                                <div className='btn' key='login' onClick={this.login}>Login</div>\r\n                            ]) :\r\n                            ([\r\n                                <div className='login-input-label' key='newUsername'>User Name: <input\r\n                                    value={newUserName} onKeyPress={this.onEnterKey}\r\n                                    onChange={(e) => this.setState({newUserName: e.target.value})}/>\r\n                                </div>,\r\n                                <div className='login-input-label' key='newPassword'>Password: <input type='password'\r\n                                                                                                      value={newPassword}\r\n                                                                                                      onKeyPress={this.onEnterKey}\r\n                                                                                                      onChange={(e) => this.setState({newPassword: e.target.value})}/>\r\n                                </div>,\r\n                                <div className='login-input-label' key='newConfirmPassword'>Confirm Password: <input\r\n                                    type='password' value={newConfirmPassword} onKeyPress={this.onEnterKey}\r\n                                    onChange={(e) => this.setState({newConfirmPassword: e.target.value})}/>\r\n                                </div>,\r\n\r\n                                <div className='btn' onClick={this.register} key='register'>Register</div>\r\n                            ])\r\n\r\n                    }\r\n                    <small onClick={() => {\r\n                        this.setState((prevState) => ({\r\n                            isRegistered: !prevState.isRegistered\r\n                        }))\r\n                    }}><a href={null}>{!!isRegistered ? \"New User?\" : \"Go to login\"}</a></small>\r\n                    {!!errorMessage && <div className='error-message'>{errorMessage}</div>}\r\n                </div>\r\n                <span>NOTE:</span>\r\n                <br/>\r\n                <small>* Details of newly registered user will be removed on clearing local storage.</small>\r\n                <br/>\r\n                <small>* Uploaded photos for all users will be removed on clearing local storage.</small>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport DefaultImage from './../images/default.png';\r\n\r\nconst UserCard = ({userData}) => {\r\n    const profileImage = !!userData.photos[0] ? userData.photos[0].url : DefaultImage;\r\n    const redirectToUserPage = () => {\r\n        window.location.href = \"/profile/\" + userData.id;\r\n    }\r\n    return (\r\n        <div className='user-card' onClick={redirectToUserPage}>\r\n            <div className='user-card-icon' style={{backgroundImage: \"url(\"+ profileImage +\")\"}}/>\r\n            <div className='user-card-name' >{userData.userName}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCard;","import React from 'react';\r\nimport {reactLocalStorage} from \"reactjs-localstorage\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport Header from \"../components/Header\";\r\n\r\nclass Users extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            allUserData: []\r\n        }\r\n        this.setAllUserData = this.setAllUserData.bind(this);\r\n    }\r\n\r\n    setAllUserData(allUserData) {\r\n        this.setState({allUserData});\r\n    }\r\n\r\n    render() {\r\n        const {allUserData} = this.state;\r\n        return (\r\n            <div>\r\n                <Header setAllUserData={this.setAllUserData}  />\r\n                <br />\r\n                <h2>All users</h2>\r\n                {\r\n                    !!allUserData && allUserData.map(user => {\r\n                        return (<UserCard userData={user}/>)\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Login from \"./pages/Login\";\r\nimport Users from \"./pages/Users\";\r\n\r\n\r\nclass Routes extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/profile/:id\" component={Profile}/>\r\n                    <Route path=\"/users\" component={Users}/>\r\n                    <Route path=\"/\" exact component={Login}/>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport Routes from \"./routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}